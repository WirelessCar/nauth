//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Account) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountClaims) DeepCopyInto(out *AccountClaims) {
	*out = *in
	if in.AccountLimits != nil {
		in, out := &in.AccountLimits, &out.AccountLimits
		*out = new(AccountLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.Exports != nil {
		in, out := &in.Exports, &out.Exports
		*out = make(Exports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Export)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Imports != nil {
		in, out := &in.Imports, &out.Imports
		*out = make(Imports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Import)
				**out = **in
			}
		}
	}
	if in.JetStreamLimits != nil {
		in, out := &in.JetStreamLimits, &out.JetStreamLimits
		*out = new(JetStreamLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.NatsLimits != nil {
		in, out := &in.NatsLimits, &out.NatsLimits
		*out = new(NatsLimits)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountClaims.
func (in *AccountClaims) DeepCopy() *AccountClaims {
	if in == nil {
		return nil
	}
	out := new(AccountClaims)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountLimits) DeepCopyInto(out *AccountLimits) {
	*out = *in
	if in.Imports != nil {
		in, out := &in.Imports, &out.Imports
		*out = new(int64)
		**out = **in
	}
	if in.Exports != nil {
		in, out := &in.Exports, &out.Exports
		*out = new(int64)
		**out = **in
	}
	if in.WildcardExports != nil {
		in, out := &in.WildcardExports, &out.WildcardExports
		*out = new(bool)
		**out = **in
	}
	if in.Conn != nil {
		in, out := &in.Conn, &out.Conn
		*out = new(int64)
		**out = **in
	}
	if in.LeafNodeConn != nil {
		in, out := &in.LeafNodeConn, &out.LeafNodeConn
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountLimits.
func (in *AccountLimits) DeepCopy() *AccountLimits {
	if in == nil {
		return nil
	}
	out := new(AccountLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountList) DeepCopyInto(out *AccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Account, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountList.
func (in *AccountList) DeepCopy() *AccountList {
	if in == nil {
		return nil
	}
	out := new(AccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRef) DeepCopyInto(out *AccountRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRef.
func (in *AccountRef) DeepCopy() *AccountRef {
	if in == nil {
		return nil
	}
	out := new(AccountRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec) DeepCopyInto(out *AccountSpec) {
	*out = *in
	if in.AccountLimits != nil {
		in, out := &in.AccountLimits, &out.AccountLimits
		*out = new(AccountLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.Exports != nil {
		in, out := &in.Exports, &out.Exports
		*out = make(Exports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Export)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Imports != nil {
		in, out := &in.Imports, &out.Imports
		*out = make(Imports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Import)
				**out = **in
			}
		}
	}
	if in.JetStreamLimits != nil {
		in, out := &in.JetStreamLimits, &out.JetStreamLimits
		*out = new(JetStreamLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.NatsLimits != nil {
		in, out := &in.NatsLimits, &out.NatsLimits
		*out = new(NatsLimits)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec.
func (in *AccountSpec) DeepCopy() *AccountSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountStatus) DeepCopyInto(out *AccountStatus) {
	*out = *in
	in.Claims.DeepCopyInto(&out.Claims)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ReconcileTimestamp.DeepCopyInto(&out.ReconcileTimestamp)
	in.SigningKey.DeepCopyInto(&out.SigningKey)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountStatus.
func (in *AccountStatus) DeepCopy() *AccountStatus {
	if in == nil {
		return nil
	}
	out := new(AccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CIDRList) DeepCopyInto(out *CIDRList) {
	{
		in := &in
		*out = make(CIDRList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CIDRList.
func (in CIDRList) DeepCopy() CIDRList {
	if in == nil {
		return nil
	}
	out := new(CIDRList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Export) DeepCopyInto(out *Export) {
	*out = *in
	if in.Revocations != nil {
		in, out := &in.Revocations, &out.Revocations
		*out = make(RevocationList, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = new(ServiceLatency)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Export.
func (in *Export) DeepCopy() *Export {
	if in == nil {
		return nil
	}
	out := new(Export)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Exports) DeepCopyInto(out *Exports) {
	{
		in := &in
		*out = make(Exports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Export)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Exports.
func (in Exports) DeepCopy() Exports {
	if in == nil {
		return nil
	}
	out := new(Exports)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Import) DeepCopyInto(out *Import) {
	*out = *in
	out.AccountRef = in.AccountRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Import.
func (in *Import) DeepCopy() *Import {
	if in == nil {
		return nil
	}
	out := new(Import)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Imports) DeepCopyInto(out *Imports) {
	{
		in := &in
		*out = make(Imports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Import)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Imports.
func (in Imports) DeepCopy() Imports {
	if in == nil {
		return nil
	}
	out := new(Imports)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Info) DeepCopyInto(out *Info) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Info.
func (in *Info) DeepCopy() *Info {
	if in == nil {
		return nil
	}
	out := new(Info)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JetStreamLimits) DeepCopyInto(out *JetStreamLimits) {
	*out = *in
	if in.MemoryStorage != nil {
		in, out := &in.MemoryStorage, &out.MemoryStorage
		*out = new(int64)
		**out = **in
	}
	if in.DiskStorage != nil {
		in, out := &in.DiskStorage, &out.DiskStorage
		*out = new(int64)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = new(int64)
		**out = **in
	}
	if in.Consumer != nil {
		in, out := &in.Consumer, &out.Consumer
		*out = new(int64)
		**out = **in
	}
	if in.MaxAckPending != nil {
		in, out := &in.MaxAckPending, &out.MaxAckPending
		*out = new(int64)
		**out = **in
	}
	if in.MemoryMaxStreamBytes != nil {
		in, out := &in.MemoryMaxStreamBytes, &out.MemoryMaxStreamBytes
		*out = new(int64)
		**out = **in
	}
	if in.DiskMaxStreamBytes != nil {
		in, out := &in.DiskMaxStreamBytes, &out.DiskMaxStreamBytes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JetStreamLimits.
func (in *JetStreamLimits) DeepCopy() *JetStreamLimits {
	if in == nil {
		return nil
	}
	out := new(JetStreamLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyInfo) DeepCopyInto(out *KeyInfo) {
	*out = *in
	in.CreationDate.DeepCopyInto(&out.CreationDate)
	in.ExpirationDate.DeepCopyInto(&out.ExpirationDate)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyInfo.
func (in *KeyInfo) DeepCopy() *KeyInfo {
	if in == nil {
		return nil
	}
	out := new(KeyInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatsLimits) DeepCopyInto(out *NatsLimits) {
	*out = *in
	if in.Subs != nil {
		in, out := &in.Subs, &out.Subs
		*out = new(int64)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(int64)
		**out = **in
	}
	if in.Payload != nil {
		in, out := &in.Payload, &out.Payload
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatsLimits.
func (in *NatsLimits) DeepCopy() *NatsLimits {
	if in == nil {
		return nil
	}
	out := new(NatsLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permission) DeepCopyInto(out *Permission) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permission.
func (in *Permission) DeepCopy() *Permission {
	if in == nil {
		return nil
	}
	out := new(Permission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permissions) DeepCopyInto(out *Permissions) {
	*out = *in
	in.Pub.DeepCopyInto(&out.Pub)
	in.Sub.DeepCopyInto(&out.Sub)
	if in.Resp != nil {
		in, out := &in.Resp, &out.Resp
		*out = new(ResponsePermission)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permissions.
func (in *Permissions) DeepCopy() *Permissions {
	if in == nil {
		return nil
	}
	out := new(Permissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponsePermission) DeepCopyInto(out *ResponsePermission) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponsePermission.
func (in *ResponsePermission) DeepCopy() *ResponsePermission {
	if in == nil {
		return nil
	}
	out := new(ResponsePermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in RevocationList) DeepCopyInto(out *RevocationList) {
	{
		in := &in
		*out = make(RevocationList, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevocationList.
func (in RevocationList) DeepCopy() RevocationList {
	if in == nil {
		return nil
	}
	out := new(RevocationList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLatency) DeepCopyInto(out *ServiceLatency) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLatency.
func (in *ServiceLatency) DeepCopy() *ServiceLatency {
	if in == nil {
		return nil
	}
	out := new(ServiceLatency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in StringList) DeepCopyInto(out *StringList) {
	{
		in := &in
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringList.
func (in StringList) DeepCopy() StringList {
	if in == nil {
		return nil
	}
	out := new(StringList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in TagList) DeepCopyInto(out *TagList) {
	{
		in := &in
		*out = make(TagList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagList.
func (in TagList) DeepCopy() TagList {
	if in == nil {
		return nil
	}
	out := new(TagList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeRange) DeepCopyInto(out *TimeRange) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeRange.
func (in *TimeRange) DeepCopy() *TimeRange {
	if in == nil {
		return nil
	}
	out := new(TimeRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserClaims) DeepCopyInto(out *UserClaims) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = new(Permissions)
		(*in).DeepCopyInto(*out)
	}
	if in.NatsLimits != nil {
		in, out := &in.NatsLimits, &out.NatsLimits
		*out = new(NatsLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.UserLimits != nil {
		in, out := &in.UserLimits, &out.UserLimits
		*out = new(UserLimits)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserClaims.
func (in *UserClaims) DeepCopy() *UserClaims {
	if in == nil {
		return nil
	}
	out := new(UserClaims)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserLimits) DeepCopyInto(out *UserLimits) {
	*out = *in
	if in.Src != nil {
		in, out := &in.Src, &out.Src
		*out = make(CIDRList, len(*in))
		copy(*out, *in)
	}
	if in.Times != nil {
		in, out := &in.Times, &out.Times
		*out = make([]TimeRange, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserLimits.
func (in *UserLimits) DeepCopy() *UserLimits {
	if in == nil {
		return nil
	}
	out := new(UserLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = new(Permissions)
		(*in).DeepCopyInto(*out)
	}
	if in.UserLimits != nil {
		in, out := &in.UserLimits, &out.UserLimits
		*out = new(UserLimits)
		(*in).DeepCopyInto(*out)
	}
	if in.NatsLimits != nil {
		in, out := &in.NatsLimits, &out.NatsLimits
		*out = new(NatsLimits)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Claims.DeepCopyInto(&out.Claims)
	in.ReconcileTimestamp.DeepCopyInto(&out.ReconcileTimestamp)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}
